{"version":3,"sources":["../src/services/DefaiProtocolService.ts","../src/index.ts"],"sourcesContent":["import { IAgentRuntime, ModelClass, Service, ServiceType, elizaLogger, generateObjectDeprecated, generateText } from \"@elizaos/core\";\n\nexport interface IDefaiProtocolService extends Service {\n    generate(text: string): Promise<any>;\n}\n\nexport class DefaiProtocolService extends Service implements IDefaiProtocolService {\n    private runtime: IAgentRuntime;\n    getInstance(): DefaiProtocolService {\n        return this;\n    }\n    static get serviceType() {\n        return ServiceType.DEFAI_PROTOCOL;\n    }\n\n    initialize(runtime: IAgentRuntime): Promise<void> {\n        this.runtime = runtime;\n        return;\n    }\n\n    async post (data: string) {\n        const body = JSON.stringify({\n            text: data,\n        })\n        const res = await fetch(\"https://6514f8b047a322952b157363f1da5d3634ee2277-80.dstack-prod4.phala.network/defai-protocol/message\", {\n            \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-language\": \"en,zh-CN;q=0.9,zh;q=0.8\",\n            \"content-type\": \"application/json\"\n            },\n            \"body\": body,\n            \"method\": \"POST\"\n        });\n        return await res.json();\n    }\n\n    /**\n     * Connect to WebSocket and send a message\n     */\n    async generate(text: string): Promise<any> {\n        try {\n            elizaLogger.log(\"input text\", text);\n            const response = await this.post(text)\n            elizaLogger.log(\"response text\", response);\n            return response\n        } catch (e) {\n            elizaLogger.error(e);\n            return \"error\";\n        }\n    }\n}\n\nexport default DefaiProtocolService;\n","import { Plugin } from \"@elizaos/core\";\nimport {DefaiProtocolService, IDefaiProtocolService} from \"./services/DefaiProtocolService\";\n\nexport * from \"./services/DefaiProtocolService\";\n\n\nexport const defaiProtocolPlugin: Plugin = {\n  name: \"defaiProtocol\",\n  description:\n    \"defaiProtocol Plugin for Eliza - Enables WebSocket communication for AI-driven market insights\",\n  actions: [],\n  evaluators: [],\n  providers: [],\n  services: [new DefaiProtocolService()],\n};\n\nexport default defaiProtocolPlugin;\n"],"mappings":";AAAA,SAAoC,SAAS,aAAa,mBAA2D;AAM9G,IAAM,uBAAN,cAAmC,QAAyC;AAAA,EACvE;AAAA,EACR,cAAoC;AAChC,WAAO;AAAA,EACX;AAAA,EACA,WAAW,cAAc;AACrB,WAAO,YAAY;AAAA,EACvB;AAAA,EAEA,WAAW,SAAuC;AAC9C,SAAK,UAAU;AACf;AAAA,EACJ;AAAA,EAEA,MAAM,KAAM,MAAc;AACtB,UAAM,OAAO,KAAK,UAAU;AAAA,MACxB,MAAM;AAAA,IACV,CAAC;AACD,UAAM,MAAM,MAAM,MAAM,yGAAyG;AAAA,MAC7H,WAAW;AAAA,QACX,UAAU;AAAA,QACV,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,MAChB;AAAA,MACA,QAAQ;AAAA,MACR,UAAU;AAAA,IACd,CAAC;AACD,WAAO,MAAM,IAAI,KAAK;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS,MAA4B;AACvC,QAAI;AACA,kBAAY,IAAI,cAAc,IAAI;AAClC,YAAM,WAAW,MAAM,KAAK,KAAK,IAAI;AACrC,kBAAY,IAAI,iBAAiB,QAAQ;AACzC,aAAO;AAAA,IACX,SAAS,GAAG;AACR,kBAAY,MAAM,CAAC;AACnB,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;;;AC5CO,IAAM,sBAA8B;AAAA,EACzC,MAAM;AAAA,EACN,aACE;AAAA,EACF,SAAS,CAAC;AAAA,EACV,YAAY,CAAC;AAAA,EACb,WAAW,CAAC;AAAA,EACZ,UAAU,CAAC,IAAI,qBAAqB,CAAC;AACvC;AAEA,IAAO,gBAAQ;","names":[]}